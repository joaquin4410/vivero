@{
    ViewData["Title"] = "Análisis de Rotación";
}

<link rel="stylesheet" href="/css/Dashboard/ÁnalisisRotación.css">
<link rel="stylesheet" href="~/css/Menu.css" asp-append-version="true" />

<!-- Menú lateral -->
<div class="menu" id="menu">
    <!-- Botón para cerrar o abrir el menú -->
    <button class="menu-toggle" onclick="toggleMenu()">☰</button>

    <!-- Opciones del menú lateral -->
    <div class="menu-items">
        <!-- Gestión de Usuarios -->
        <span class="menu-description">Gestión de Usuarios</span>
        <a asp-controller="Usuarios" asp-action="Index" class="menu-item">
            Administrar Usuarios
        </a>
        <a asp-controller="Historial" asp-action="Index" class="menu-item">
            Historial de Actividades
        </a>

        <!-- Gestión de Proveedores -->
        <span class="menu-description">Gestión de Proveedores</span>
        <a asp-controller="Proveedores" asp-action="Index" class="menu-item">
            Gestión de Proveedores
        </a>

        <!-- Gestión de Productos -->
        <span class="menu-description">Gestión de Productos</span>
        <a asp-controller="Productos" asp-action="Index" class="menu-item">
            Ver Productos
        </a>
        <a asp-controller="Productos" asp-action="Promociones" class="menu-item">
            Gestión de Promociones
        </a>
        <a asp-controller="Productos" asp-action="HistorialMovimientos" class="menu-item">
            Gestión de Stock
        </a>
        <a asp-controller="Productos" asp-action="Catalogo" class="menu-item">
            Catálogo en Línea
        </a>
        <a asp-controller="Productos" asp-action="Buscar" class="menu-item">
            Buscar Productos
        </a>
        <a asp-controller="Productos" asp-action="InformacionStock" class="menu-item">
            Información de Stock
        </a>

        <!-- Reportes -->
        <span class="menu-description">Reportes</span>
        <a asp-controller="Dashboard" asp-action="ProductosMasVendidos" class="menu-item">
            Productos Más Vendidos
        </a>
        <a asp-controller="Dashboard" asp-action="VentasPorPeriodo" class="menu-item">
            Ventas por Período
        </a>
        <a asp-controller="Productos" asp-action="GenerarReporteFrecuencia" class="menu-item">
            Reportes Frecuentes
        </a>
       
        <!-- Ganancias -->
        <span class="menu-description">Ganancias</span>
        <a asp-controller="Dashboard" asp-action="Ganancias" class="menu-item">
            Ganancias por Producto
        </a>
        <a asp-controller="Dashboard" asp-action="GananciasMensuales" class="menu-item">
            Ganancias Mensuales
        </a>
        <a asp-controller="GananciasHistoricas" asp-action="Index" class="menu-item">
            Ganancias Históricas
        </a>

        <!-- Funciones adicionales -->
        <span class="menu-description">Funciones Adicionales</span>
        <a asp-controller="Dashboard" asp-action="AnalisisRotacion" class="menu-item">
            Análisis de Rotación
        </a>
        <a asp-controller="FlujoCaja" asp-action="Index" class="menu-item">
            Flujo de Caja
        </a>
        <a asp-controller="Dashboard" asp-action="Simulacion" class="menu-item">
            Simular Escenarios
        </a>
        <a asp-controller="Dashboard" asp-action="GenerarCotizacion" class="menu-item">
            Generar Cotizaciones
        </a>
        <a asp-controller="Productos" asp-action="AlertaBajoInventario" class="menu-item">
            Quiebre De Stock
        </a>
        <a asp-controller="Dashboard" asp-action="CalcularUtilidades" class="menu-item">
            Calcular Utilidades
        </a>
        <!-- Navegación General -->
        <span class="menu-description">Navegación</span>
        <a href="/Dashboard/Index" class="menu-item">Inicio</a>
    </div>

    <!-- Botón para cerrar sesión -->
    <form asp-controller="Auth" asp-action="LogOut" method="post">
        <button class="btn-logout" type="submit">Cerrar Sesión</button>
    </form>
</div>



<div class="container mt-5">
    <h1 class="text-center mb-4">Análisis de Rotación</h1>
    <p class="text-center">Este análisis muestra la rotación de los productos en el inventario en función de las cantidades vendidas.</p>

    <div class="main-content">
        <div class="chart-container">
            <canvas id="rotacionChart"></canvas>
        </div>
        <div class="info-cards">
            <div class="card high-rotation">
                <h3>Alta Rotación</h3>
                <p>Productos con alta cantidad vendida.</p>
                <ul>
                    @if (ViewBag.AltaRotacion != null)
                    {
                        foreach (var producto in Newtonsoft.Json.JsonConvert.DeserializeObject<List<dynamic>>(ViewBag.AltaRotacion.ToString()))
                        {
                            <li>@producto.Nombre: @producto.Cantidad unidades</li>
                        }
                    }
                    else
                    {
                        <li>No hay productos de alta rotación.</li>
                    }
                </ul>
            </div>
            <div class="card medium-rotation">
                <h3>Media Rotación</h3>
                <p>Productos con cantidad vendida moderada.</p>
                <ul>
                    @if (ViewBag.MediaRotacion != null)
                    {
                        foreach (var producto in Newtonsoft.Json.JsonConvert.DeserializeObject<List<dynamic>>(ViewBag.MediaRotacion.ToString()))
                        {
                            <li>@producto.Nombre: @producto.Cantidad unidades</li>
                        }
                    }
                    else
                    {
                        <li>No hay productos de media rotación.</li>
                    }
                </ul>
            </div>
            <div class="card low-rotation">
                <h3>Baja Rotación</h3>
                <p>Productos con baja cantidad vendida.</p>
                <ul>
                    @if (ViewBag.BajaRotacion != null)
                    {
                        foreach (var producto in Newtonsoft.Json.JsonConvert.DeserializeObject<List<dynamic>>(ViewBag.BajaRotacion.ToString()))
                        {
                            <li>@producto.Nombre: @producto.Cantidad unidades</li>
                        }
                    }
                    else
                    {
                        <li>No hay productos de baja rotación.</li>
                    }
                </ul>
            </div>
        </div>
    </div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Recuperar datos desde el controlador
    const altaRotacion = @Html.Raw(ViewBag.AltaRotacion);
    const mediaRotacion = @Html.Raw(ViewBag.MediaRotacion);
    const bajaRotacion = @Html.Raw(ViewBag.BajaRotacion);

    // Construir etiquetas y datos para el gráfico
    const labels = altaRotacion.map(p => p.Nombre)
        .concat(mediaRotacion.map(p => p.Nombre))
        .concat(bajaRotacion.map(p => p.Nombre));

    const data = altaRotacion.map(p => p.Cantidad)
        .concat(mediaRotacion.map(p => p.Cantidad))
        .concat(bajaRotacion.map(p => p.Cantidad));

    const backgroundColors = [
        ...Array(altaRotacion.length).fill('rgba(75, 192, 192, 0.2)'),
        ...Array(mediaRotacion.length).fill('rgba(255, 206, 86, 0.2)'),
        ...Array(bajaRotacion.length).fill('rgba(255, 99, 132, 0.2)')
    ];

    const borderColors = [
        ...Array(altaRotacion.length).fill('rgba(75, 192, 192, 1)'),
        ...Array(mediaRotacion.length).fill('rgba(255, 206, 86, 1)'),
        ...Array(bajaRotacion.length).fill('rgba(255, 99, 132, 1)')
    ];

    // Configuración del gráfico
    const rotacionData = {
        labels: labels,
        datasets: [{
            label: 'Cantidad Vendida',
            data: data,
            backgroundColor: backgroundColors,
            borderColor: borderColors,
            borderWidth: 1
        }]
    };

    // Renderizar el gráfico
    const rotacionConfig = {
        type: 'bar',
        data: rotacionData,
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };

    // Crear el gráfico
    new Chart(
        document.getElementById('rotacionChart'),
        rotacionConfig
    );
</script>

    <!--Menú lateral-->
    <script>
        function toggleMenu(forceOpen = null) {
            const menu = document.getElementById("menu");
            const content = document.querySelector(".content");

            // Alterna el estado del menú
            if (forceOpen === true || (!menu.classList.contains("open") && forceOpen === null)) {
                menu.classList.add("open");
                content.style.marginLeft = "220px";
            } else if (forceOpen === false || (menu.classList.contains("open") && forceOpen === null)) {
                menu.classList.remove("open");
                content.style.marginLeft = "0";
            }
        }

        // Detecta si el cursor se acerca al borde izquierdo
        document.addEventListener("mousemove", (event) => {
            if (event.clientX <= 20) {
                toggleMenu(true); // Abre el menú si el cursor está cerca del borde izquierdo
            } else if (event.clientX > 240) {
                toggleMenu(false); // Cierra el menú si el cursor se aleja
            }
        });
    </script>
